// <auto-generated />
using System;
using DoorDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoorWebDB.Migrations
{
    [DbContext(typeof(DoorDbContext))]
    [Migration("20240721044129_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DoorDB.TblAuditLog", b =>
                {
                    b.Property<int>("Serial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Serial");

                    b.ToTable("tblAuditLog");
                });

            modelBuilder.Entity("DoorDB.TblPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("權限項目Id");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime(6)")
                        .HasComment("權限時間起");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime(6)")
                        .HasComment("權限時訖");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("權限項目名稱");

                    b.Property<string>("NameI18n")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("權限項目名稱(i18n)");

                    b.Property<int>("PermissionGroupId")
                        .HasColumnType("int")
                        .HasComment("權限項目所屬群組([tblPermissionGroup].[Id])");

                    b.Property<int>("PermissionLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblPermission");
                });

            modelBuilder.Entity("DoorDB.TblPermissionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameI18n")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tblPermissionGroup");

                    b.HasData(
                        new
                        {
                            Id = 51,
                            Name = "大門",
                            NameI18n = ""
                        },
                        new
                        {
                            Id = 52,
                            Name = "Car教室",
                            NameI18n = ""
                        },
                        new
                        {
                            Id = 53,
                            Name = "Sunny教室",
                            NameI18n = ""
                        },
                        new
                        {
                            Id = 54,
                            Name = "儲藏室",
                            NameI18n = ""
                        });
                });

            modelBuilder.Entity("DoorDB.TblQRCodeStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DoorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("QRCodeData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QRcodeType")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("tblQRCodeStorage");
                });

            modelBuilder.Entity("DoorDB.TblRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tblRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanDelete = false,
                            CreatedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7569),
                            CreatorUserId = 1,
                            Description = "管理者",
                            IsDelete = false,
                            IsEnable = true,
                            ModifiedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7570),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CanDelete = false,
                            CreatedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7573),
                            CreatorUserId = 1,
                            Description = "老師",
                            IsDelete = false,
                            IsEnable = true,
                            ModifiedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7574),
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            CanDelete = false,
                            CreatedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7576),
                            CreatorUserId = 1,
                            Description = "學生",
                            IsDelete = false,
                            IsEnable = true,
                            ModifiedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7577),
                            Name = "User"
                        },
                        new
                        {
                            Id = 4,
                            CanDelete = false,
                            CreatedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7579),
                            CreatorUserId = 1,
                            Description = "值班人員",
                            IsDelete = false,
                            IsEnable = true,
                            ModifiedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7580),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DoorDB.TblUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastLoginIP")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("locale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblUser");

                    b.HasData(
                        new
                        {
                            Id = 51,
                            AccountType = "LOCAL",
                            CreateTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7552),
                            DisplayName = "Administrator",
                            Email = "",
                            IsDelete = false,
                            IsEnable = true,
                            LastLoginIP = "",
                            ModifiedTime = new DateTime(2024, 7, 21, 12, 41, 29, 88, DateTimeKind.Local).AddTicks(7563),
                            Secret = "1qaz2wsx",
                            Username = "admin",
                            locale = 1
                        });
                });

            modelBuilder.Entity("TblPermissionTblUser", b =>
                {
                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("PermissionsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("TblPermissionTblUser");
                });

            modelBuilder.Entity("TblQRCodeStorageTblUser", b =>
                {
                    b.Property<int>("QRCodesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("QRCodesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("TblQRCodeStorageTblUser");
                });

            modelBuilder.Entity("TblRoleTblUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("TblRoleTblUser");
                });

            modelBuilder.Entity("TblPermissionTblUser", b =>
                {
                    b.HasOne("DoorDB.TblPermission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoorDB.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TblQRCodeStorageTblUser", b =>
                {
                    b.HasOne("DoorDB.TblQRCodeStorage", null)
                        .WithMany()
                        .HasForeignKey("QRCodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoorDB.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TblRoleTblUser", b =>
                {
                    b.HasOne("DoorDB.TblRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoorDB.TblUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
